{"ast":null,"code":"const API_URL = 'http://127.0.0.1:9000/api/';\nconst AUTH_URL = API_URL + 'auth/';\nconst HIT_URL = API_URL + 'hits/';\nexport async function authorizeRequest(userState) {\n  const userInfo = {\n    username: userState.username,\n    password: userState.password\n  };\n  const response = await fetch(AUTH_URL + (userState.login ? \"login\" : \"signup\"), {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userInfo)\n  });\n  const text = await response.text();\n  try {\n    return JSON.parse(text);\n  } catch (error) {\n    console.log(error.message);\n    return {\n      message: text\n    };\n  }\n}\nexport async function getHitsRequest(token) {\n  try {\n    const response = await fetch(HIT_URL, {\n      method: 'GET',\n      headers: {\n        'Authorization': \"Bearer \" + token\n      }\n    });\n    return await response.json();\n  } catch (error) {\n    console.log(error);\n    return {\n      error: error.name,\n      message: error.message\n    };\n  }\n}\nexport async function addHitRequest(hit, token) {\n  const response = await fetch(HIT_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': \"Bearer \" + token\n    },\n    body: JSON.stringify(hit)\n  });\n  const text = await response.text();\n  try {\n    return JSON.parse(text);\n  } catch (error) {\n    console.log(error.message);\n    return {\n      message: text\n    };\n  }\n}\nexport async function clearHitsRequest(token) {\n  try {\n    const response = await fetch(HIT_URL, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': \"Bearer \" + token\n      }\n    });\n    if (response.status !== 200) return await response.json();\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.log(error);\n    return {\n      error: error.name,\n      message: error.message\n    };\n  }\n}","map":{"version":3,"names":["API_URL","AUTH_URL","HIT_URL","authorizeRequest","userState","userInfo","username","password","response","fetch","login","method","headers","body","JSON","stringify","text","parse","error","console","log","message","getHitsRequest","token","json","name","addHitRequest","hit","clearHitsRequest","status","success"],"sources":["/Users/nylon/itmo/web/fourth/Lab4/frontend/src/service/Service.js"],"sourcesContent":["const API_URL = 'http://127.0.0.1:9000/api/'\nconst AUTH_URL = API_URL + 'auth/';\nconst HIT_URL = API_URL + 'hits/'\n\nexport async function authorizeRequest(userState) {\n    const userInfo = { username: userState.username, password: userState.password }\n\n    const response = await fetch(AUTH_URL + (userState.login ? \"login\" : \"signup\"), {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(userInfo),\n    });\n\n    const text = await response.text();\n    try{\n        return JSON.parse(text);\n    } catch (error) {\n        console.log(error.message);\n\n        return {message: text};\n    }\n}\n\n\nexport async function getHitsRequest(token) {\n    try {\n        const response = await fetch(HIT_URL, {\n            method: 'GET',\n            headers: {\n                'Authorization': \"Bearer \" + token\n            }\n        });\n        return await response.json();\n    } catch (error) {\n        console.log(error);\n\n        return {error: error.name, message: error.message};\n    }\n}\n\nexport async function addHitRequest(hit, token) {\n    const response = await fetch(HIT_URL, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': \"Bearer \" + token\n        },\n        body: JSON.stringify(hit),\n    });\n\n    const text = await response.text();\n\n    try{\n        return JSON.parse(text);\n    } catch (error) {\n        console.log(error.message);\n        return {message: text};\n    }\n}\n\nexport async function clearHitsRequest(token) {\n    try {\n        const response = await fetch(HIT_URL, {\n            method: 'DELETE',\n            headers: {\n                'Authorization': \"Bearer \" + token\n            },\n        });\n        if (response.status !== 200)\n            return await response.json();\n        return {success: true};\n    } catch (error) {\n        console.log(error);\n\n        return {error: error.name, message: error.message};\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}