{"ast":null,"code":"var _jsxFileName = \"/Users/nylon/itmo/web/fourth/Lab4/frontend/src/view/components/Graph.js\",\n  _s = $RefreshSig$();\nimport JXGBoard from 'jsxgraph-react-js';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { addHitRequest } from \"../../service/Service\";\nimport \"../../resources/Graph.css\";\nimport { addHit } from \"../../store/userSlice\";\nimport { showError } from \"../../store/errorSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawnObjects = [];\nlet lastClickProcess = null;\nconst Graph = () => {\n  _s();\n  const dispatch = useDispatch();\n  const userInfo = useSelector(state => state.user);\n  const [board, setBoard] = useState(null);\n  const figuresProperties = {\n    strokeColor: '#4b61cf',\n    highlightStrokeColor: '#5a73ed',\n    fillColor: '#4b61cf',\n    highlightFillColor: '#5a73ed',\n    fixed: true\n  };\n  const pointProperties = function (visible, success) {\n    return {\n      strokeColor: success ? 'green' : 'red',\n      highlightStrokeColor: success ? '#5ee667' : '#f23d3d',\n      fillColor: success ? 'green' : 'red',\n      highlightFillColor: success ? '#5ee667' : '#f23d3d',\n      name: '',\n      size: 2,\n      fixed: true,\n      visible: visible\n    };\n  };\n  const createPoint = function (x, y) {\n    let visible = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    let success = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    return board.create('point', [x, y], pointProperties(visible, success));\n  };\n  const setVerticesInvisible = figure => {\n    for (let i = 0; i < figure.vertices.length - 1; i++) {\n      figure.vertices[i].setAttribute({\n        visible: false\n      });\n    }\n  };\n  const wrapCoordinate = coordinate => {\n    return Math.round(coordinate * 100) / 100;\n  };\n  const createTriangle = R => {\n    let p1 = createPoint(0, 0);\n    let p2 = createPoint(0, R / 2);\n    let p3 = createPoint(-R, 0);\n    let triangle = board.create('polygon', [p1, p2, p3], figuresProperties);\n    setVerticesInvisible(triangle);\n    drawnObjects.push(triangle);\n    return triangle;\n  };\n  const createRectangle = R => {\n    let p1 = createPoint(0, 0);\n    let p2 = createPoint(R, 0);\n    let p3 = createPoint(R, R);\n    let p4 = createPoint(0, R);\n    let rectangle = board.create('polygon', [p1, p2, p3, p4], figuresProperties);\n    setVerticesInvisible(rectangle);\n    drawnObjects.push(rectangle);\n    return rectangle;\n  };\n  const createCircle = R => {\n    let p1 = createPoint(0, 0, false);\n    let p2 = createPoint(0, -R, false);\n    let p3 = createPoint(R, 0, false);\n    let circle = board.create('sector', [p1, p2, p3], figuresProperties);\n    drawnObjects.push(circle);\n    return circle;\n  };\n  const drawPointsByR = R => {\n    console.log(\"Draw by r: \" + R);\n    userInfo.hits.forEach(point => {\n      if (parseFloat(R) === point.r) {\n        drawnObjects.push(createPoint(point.x, point.y, true, point.result));\n      }\n    });\n  };\n  const createArea = () => {\n    // Update listeners\n    board.off('down', lastClickProcess);\n    board.on('down', clickProcess);\n    lastClickProcess = clickProcess;\n    // Clear board\n    board.removeObject(drawnObjects);\n    createTriangle(userInfo.r);\n    createRectangle(userInfo.r);\n    createCircle(userInfo.r);\n    drawPointsByR(userInfo.r);\n  };\n  const clickProcess = async e => {\n    if (e.button === 2 || e.target.tagName === 'SPAN') return;\n    const coords = board.getUsrCoordsOfMouse(e);\n    const hit = {\n      x: wrapCoordinate(coords[0]),\n      y: wrapCoordinate(coords[1]),\n      r: userInfo.r\n    };\n    const response = await addHitRequest(hit, userInfo.token);\n    if (response.message) {\n      dispatch(showError({\n        detail: response.message\n      }));\n      return;\n    }\n    dispatch(addHit(response));\n  };\n  const logicJS = brd => {\n    console.log(\"Set board\");\n    setBoard(brd);\n  };\n  if (board) createArea(board);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graphBlock col-md\",\n    children: /*#__PURE__*/_jsxDEV(JXGBoard, {\n      logic: logicJS,\n      boardAttributes: {\n        boundingbox: [-4, 4, 4, -4],\n        axis: true\n      },\n      style: {\n        width: \"400px\",\n        height: \"400px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 9\n  }, this);\n};\n_s(Graph, \"bQToTGFZdsBibhnwFz74cy4Givw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["JXGBoard","useDispatch","useSelector","useState","addHitRequest","addHit","showError","drawnObjects","lastClickProcess","Graph","dispatch","userInfo","state","user","board","setBoard","figuresProperties","strokeColor","highlightStrokeColor","fillColor","highlightFillColor","fixed","pointProperties","visible","success","name","size","createPoint","x","y","create","setVerticesInvisible","figure","i","vertices","length","setAttribute","wrapCoordinate","coordinate","Math","round","createTriangle","R","p1","p2","p3","triangle","push","createRectangle","p4","rectangle","createCircle","circle","drawPointsByR","console","log","hits","forEach","point","parseFloat","r","result","createArea","off","on","clickProcess","removeObject","e","button","target","tagName","coords","getUsrCoordsOfMouse","hit","response","token","message","detail","logicJS","brd","boundingbox","axis","width","height"],"sources":["/Users/nylon/itmo/web/fourth/Lab4/frontend/src/view/components/Graph.js"],"sourcesContent":["import JXGBoard from 'jsxgraph-react-js'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useState} from \"react\";\n\nimport {addHitRequest} from \"../../service/Service\";\n\nimport \"../../resources/Graph.css\"\nimport {addHit} from \"../../store/userSlice\";\nimport {showError} from \"../../store/errorSlice\";\n\nconst drawnObjects = [];\nlet lastClickProcess = null;\n\n\nconst Graph = () => {\n    const dispatch = useDispatch();\n\n    const userInfo = useSelector(state => state.user);\n    const [board, setBoard] = useState(null);\n\n    const figuresProperties = {\n        strokeColor: '#4b61cf',\n        highlightStrokeColor: '#5a73ed',\n        fillColor: '#4b61cf',\n        highlightFillColor: '#5a73ed',\n        fixed: true\n    };\n\n    const pointProperties = function (visible, success) {\n        return {\n            strokeColor: success ? 'green': 'red',\n            highlightStrokeColor: success ? '#5ee667' : '#f23d3d',\n            fillColor: success ? 'green' : 'red',\n            highlightFillColor: success ? '#5ee667' : '#f23d3d',\n            name: '',\n            size: 2,\n            fixed: true,\n            visible: visible\n        }\n    };\n\n    const createPoint = (x, y, visible = true, success = true) => {\n        return board.create('point', [x, y], pointProperties(visible, success));\n    }\n    const setVerticesInvisible = (figure) => {\n        for (let i = 0; i < figure.vertices.length - 1; i++) {\n            figure.vertices[i].setAttribute({visible: false});\n        }\n    }\n    const wrapCoordinate = (coordinate) => {\n        return Math.round(coordinate*100)/100\n    }\n\n    const createTriangle = (R) => {\n        let p1 = createPoint(0, 0);\n        let p2 = createPoint(0, R/2);\n        let p3 = createPoint(-R, 0);\n        let triangle = board.create('polygon', [p1, p2, p3], figuresProperties);\n        setVerticesInvisible(triangle);\n\n        drawnObjects.push(triangle);\n        return triangle;\n    }\n\n    const createRectangle = (R) => {\n        let p1 = createPoint(0, 0);\n        let p2 = createPoint(R, 0);\n        let p3 = createPoint(R, R);\n        let p4 = createPoint(0, R);\n        let rectangle = board.create('polygon', [p1, p2, p3, p4], figuresProperties);\n        setVerticesInvisible(rectangle);\n\n        drawnObjects.push(rectangle);\n        return rectangle;\n    }\n\n    const createCircle = (R) => {\n        let p1 = createPoint(0, 0, false);\n        let p2 = createPoint(0, -R, false);\n        let p3 = createPoint(R, 0, false);\n        let circle = board.create('sector', [p1, p2, p3], figuresProperties);\n\n        drawnObjects.push(circle);\n        return circle;\n    }\n\n    const drawPointsByR = (R) => {\n        console.log(\"Draw by r: \" + R);\n\n        userInfo.hits.forEach(point => {\n            if (parseFloat(R) === point.r) {\n                drawnObjects.push(\n                    createPoint(point.x, point.y, true, point.result)\n                );\n            }\n        })\n    }\n\n    const createArea = () => {\n        // Update listeners\n        board.off('down', lastClickProcess);\n        board.on('down', clickProcess);\n        lastClickProcess = clickProcess;\n        // Clear board\n        board.removeObject(drawnObjects);\n\n        createTriangle(userInfo.r);\n        createRectangle(userInfo.r);\n        createCircle(userInfo.r);\n        drawPointsByR(userInfo.r);\n    }\n\n    const clickProcess = async (e) => {\n        if (e.button === 2 || e.target.tagName === 'SPAN') return;\n\n        const coords = board.getUsrCoordsOfMouse(e);\n        const hit = {x: wrapCoordinate(coords[0]), y: wrapCoordinate(coords[1]), r: userInfo.r}\n\n        const response = await addHitRequest(hit, userInfo.token);\n\n        if (response.message) {\n            dispatch(showError({ detail: response.message }))\n            return;\n        }\n\n        dispatch(addHit(response));\n    };\n\n    const logicJS = (brd) => {\n        console.log(\"Set board\")\n        setBoard(brd);\n    }\n\n    if (board) createArea(board);\n\n    return (\n        <div className=\"graphBlock col-md\">\n            <JXGBoard\n                logic={logicJS}\n                boardAttributes={{boundingbox: [-4, 4, 4, -4], axis: true}}\n                style={{\n                    width: \"400px\",\n                    height: \"400px\"\n                }}\n            />\n        </div>\n    );\n}\n\n\nexport default Graph;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}